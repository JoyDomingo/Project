//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Project_4.CreditSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CreditCardSoap", Namespace="http://tempuri.org/")]
    public partial class CreditCard : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccountByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCreditCardInforOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewTransactionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CompareCardTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CreditCard() {
            this.Url = global::Project_4.Properties.Settings.Default.Project_4_CreditSvc_CreditCard;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddCreditCardCompletedEventHandler AddCreditCardCompleted;
        
        /// <remarks/>
        public event getAccountByNumberCompletedEventHandler getAccountByNumberCompleted;
        
        /// <remarks/>
        public event UpdateCreditCardInforCompletedEventHandler UpdateCreditCardInforCompleted;
        
        /// <remarks/>
        public event AddNewTransactionsCompletedEventHandler AddNewTransactionsCompleted;
        
        /// <remarks/>
        public event CompareCardTransactionCompletedEventHandler CompareCardTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCreditCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCreditCard(CreditCardObjects credit, string password) {
            object[] results = this.Invoke("AddCreditCard", new object[] {
                        credit,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCreditCardAsync(CreditCardObjects credit, string password) {
            this.AddCreditCardAsync(credit, password, null);
        }
        
        /// <remarks/>
        public void AddCreditCardAsync(CreditCardObjects credit, string password, object userState) {
            if ((this.AddCreditCardOperationCompleted == null)) {
                this.AddCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCreditCardOperationCompleted);
            }
            this.InvokeAsync("AddCreditCard", new object[] {
                        credit,
                        password}, this.AddCreditCardOperationCompleted, userState);
        }
        
        private void OnAddCreditCardOperationCompleted(object arg) {
            if ((this.AddCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCreditCardCompleted(this, new AddCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccountByNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getAccountByNumber(int cardNumber) {
            object[] results = this.Invoke("getAccountByNumber", new object[] {
                        cardNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getAccountByNumberAsync(int cardNumber) {
            this.getAccountByNumberAsync(cardNumber, null);
        }
        
        /// <remarks/>
        public void getAccountByNumberAsync(int cardNumber, object userState) {
            if ((this.getAccountByNumberOperationCompleted == null)) {
                this.getAccountByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccountByNumberOperationCompleted);
            }
            this.InvokeAsync("getAccountByNumber", new object[] {
                        cardNumber}, this.getAccountByNumberOperationCompleted, userState);
        }
        
        private void OngetAccountByNumberOperationCompleted(object arg) {
            if ((this.getAccountByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccountByNumberCompleted(this, new getAccountByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCreditCardInfor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateCreditCardInfor(CreditCardObjects credit, string password) {
            object[] results = this.Invoke("UpdateCreditCardInfor", new object[] {
                        credit,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCreditCardInforAsync(CreditCardObjects credit, string password) {
            this.UpdateCreditCardInforAsync(credit, password, null);
        }
        
        /// <remarks/>
        public void UpdateCreditCardInforAsync(CreditCardObjects credit, string password, object userState) {
            if ((this.UpdateCreditCardInforOperationCompleted == null)) {
                this.UpdateCreditCardInforOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCreditCardInforOperationCompleted);
            }
            this.InvokeAsync("UpdateCreditCardInfor", new object[] {
                        credit,
                        password}, this.UpdateCreditCardInforOperationCompleted, userState);
        }
        
        private void OnUpdateCreditCardInforOperationCompleted(object arg) {
            if ((this.UpdateCreditCardInforCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCreditCardInforCompleted(this, new UpdateCreditCardInforCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewTransactions", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddNewTransactions(CreditCardTransactions credit) {
            object[] results = this.Invoke("AddNewTransactions", new object[] {
                        credit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewTransactionsAsync(CreditCardTransactions credit) {
            this.AddNewTransactionsAsync(credit, null);
        }
        
        /// <remarks/>
        public void AddNewTransactionsAsync(CreditCardTransactions credit, object userState) {
            if ((this.AddNewTransactionsOperationCompleted == null)) {
                this.AddNewTransactionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewTransactionsOperationCompleted);
            }
            this.InvokeAsync("AddNewTransactions", new object[] {
                        credit}, this.AddNewTransactionsOperationCompleted, userState);
        }
        
        private void OnAddNewTransactionsOperationCompleted(object arg) {
            if ((this.AddNewTransactionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewTransactionsCompleted(this, new AddNewTransactionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CompareCardTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CompareCardTransaction(CreditCardObjects credit) {
            object[] results = this.Invoke("CompareCardTransaction", new object[] {
                        credit});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CompareCardTransactionAsync(CreditCardObjects credit) {
            this.CompareCardTransactionAsync(credit, null);
        }
        
        /// <remarks/>
        public void CompareCardTransactionAsync(CreditCardObjects credit, object userState) {
            if ((this.CompareCardTransactionOperationCompleted == null)) {
                this.CompareCardTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCompareCardTransactionOperationCompleted);
            }
            this.InvokeAsync("CompareCardTransaction", new object[] {
                        credit}, this.CompareCardTransactionOperationCompleted, userState);
        }
        
        private void OnCompareCardTransactionOperationCompleted(object arg) {
            if ((this.CompareCardTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CompareCardTransactionCompleted(this, new CompareCardTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditCardObjects {
        
        private string dateField;
        
        private float amountOwedField;
        
        private float availamountBalanceField;
        
        private int cardNumberField;
        
        private string firstField;
        
        private string lastField;
        
        private int codeField;
        
        /// <remarks/>
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        public float amountOwed {
            get {
                return this.amountOwedField;
            }
            set {
                this.amountOwedField = value;
            }
        }
        
        /// <remarks/>
        public float availamountBalance {
            get {
                return this.availamountBalanceField;
            }
            set {
                this.availamountBalanceField = value;
            }
        }
        
        /// <remarks/>
        public int cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string first {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        public string last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
            }
        }
        
        /// <remarks/>
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2102.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CreditCardTransactions {
        
        private int cardNumberField;
        
        private string pDescriptionField;
        
        private float pPriceField;
        
        private string cardDateField;
        
        private string creditAddressField;
        
        private int creditZipCodeField;
        
        private string creditStateField;
        
        private string creditCityField;
        
        /// <remarks/>
        public int cardNumber {
            get {
                return this.cardNumberField;
            }
            set {
                this.cardNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PDescription {
            get {
                return this.pDescriptionField;
            }
            set {
                this.pDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public float pPrice {
            get {
                return this.pPriceField;
            }
            set {
                this.pPriceField = value;
            }
        }
        
        /// <remarks/>
        public string cardDate {
            get {
                return this.cardDateField;
            }
            set {
                this.cardDateField = value;
            }
        }
        
        /// <remarks/>
        public string CreditAddress {
            get {
                return this.creditAddressField;
            }
            set {
                this.creditAddressField = value;
            }
        }
        
        /// <remarks/>
        public int CreditZipCode {
            get {
                return this.creditZipCodeField;
            }
            set {
                this.creditZipCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CreditState {
            get {
                return this.creditStateField;
            }
            set {
                this.creditStateField = value;
            }
        }
        
        /// <remarks/>
        public string CreditCity {
            get {
                return this.creditCityField;
            }
            set {
                this.creditCityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddCreditCardCompletedEventHandler(object sender, AddCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void getAccountByNumberCompletedEventHandler(object sender, getAccountByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccountByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccountByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void UpdateCreditCardInforCompletedEventHandler(object sender, UpdateCreditCardInforCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCreditCardInforCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCreditCardInforCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void AddNewTransactionsCompletedEventHandler(object sender, AddNewTransactionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewTransactionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewTransactionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void CompareCardTransactionCompletedEventHandler(object sender, CompareCardTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CompareCardTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CompareCardTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591